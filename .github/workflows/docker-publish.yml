name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

  # # Run tests for any PRs.
  # pull_request:

  # Run every day to update the images
  schedule:
    - cron: '*/5 * * * *'

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: image

jobs:
  # # Run tests.
  # # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  # test:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Run tests
  #       run: |
  #         if [ -f docker-compose.test.yml ]; then
  #           docker-compose --file docker-compose.test.yml build
  #           docker-compose --file docker-compose.test.yml run sut
  #         else
  #           docker build . --file Dockerfile
  #         fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    # needs: test

    runs-on: ubuntu-20.04
    # if: github.event_name == 'push'

    strategy:
      matrix:
        base-image:
          - ubuntu:20.04
        php-version: 
          - 7.3
          - 7.4

    steps:
      - uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Echo out the files
        run: ls -al

      - name: Cache base image digest
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/.base-image-digest
          key: base-image-digest

      - name: Pull base image
        run: docker pull ${{ matrix.base-image }}

      - name: Read cached base image digest
        id: cached-base-image-digest
        run: |
          touch "${{ runner.temp }}/.base-image-digest"
          echo "::set-output name=sha256::$(head -n 1 "${{ runner.temp }}/.base-image-digest")"

      - name: Set base image digest
        id: base-image-digest
        run: echo "::set-output name=sha256::$(docker inspect --format='{{index .RepoDigests 0}}' ${{ matrix.base-image }}')"
      
      - name: Build image
        if: steps.base-image-digest.outputs.sha256 != steps.cached-base-image-digest.outputs.sha256
        run: docker build php/${{ matrix.php-version }}/. --tag serversideup/php:${{ matrix.php-version }}

      - name: Push image
        if: steps.base-image-digest.outputs.sha256 != steps.cached-base-image-digest.outputs.sha256
        run: docker push serversideup/php:${{ matrix.php-version }}

      - name: Update base image digest cache
        run: |
          echo "${{ steps.base-image-digest.outputs.sha256 }}" >"${{ runner.temp }}/.base-image-digest"
